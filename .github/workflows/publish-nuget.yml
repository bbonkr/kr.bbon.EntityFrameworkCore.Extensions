name: 'Publish to nuget'

on:
  release:
    types: [published]

jobs:
  publish:
    name: 'Publish to nuget'
    runs-on: ubuntu-latest
    env:
      TARGET_PROJECT_PATH: src/kr.bbon.EntityFrameworkCore.Extensions/
      TARGET_PROJECT_FILE: kr.bbon.EntityFrameworkCore.Extensions.csproj
    steps:
      - uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

#       - name: Test
#         run: dotnet test --no-build --verbosity normal

      - name: Get version 
        uses: bbonkr/get-version-action@v1.0.1
        id: get_version
        with:
          project: "$TARGET_PROJECT_PATH$TARGET_PROJECT_FILE" # src/kr.bbon.EntityFrameworkCore.Extensions/kr.bbon.EntityFrameworkCore.Extensions.csproj

      - name: Check git tag 
        uses: bbonkr/git-tag-check-action@v1.0.5
        id: git_tag_check
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          tag: 'v${{ steps.get_version.outputs.version }}'

      - name: Pack 
        run: |
          dotnet pack "$TARGET_PROJECT_PATH$TARGET_PROJECT_FILE" -c Release

      - name: Publish 
        run: |
          dotnet nuget push "$TARGET_PROJECT_PATHbin/Release/*.nupkg" --api-key "${{ secrets.NUGET_API_KEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Notify to slack
        uses: 8398a7/action-slack@v3
        with:
          job_name: publish
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() # Pick up events even if the job fails or is canceled. 

      - name: Notify to Microsoft Teams
        uses: skitionek/notify-microsoft-teams@master
        if: always()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}          
      
   
